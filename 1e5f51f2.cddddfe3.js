(window.webpackJsonp=window.webpackJsonp||[]).push([[32],{184:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(1),i=n(11),a=(n(0),n(288)),o={id:"advanced",title:"Advanced Topics",sidebar_label:"Advanced Topics"},c={id:"version-0.8.2/advanced",title:"Advanced Topics",description:"## Implementing Custom Network Status checks",source:"@site/versioned_docs/version-0.8.2/ref-advanced.md",permalink:"/docs/0.8.2/advanced",editUrl:"https://github.com/aerogear/graphback/edit/master/website/versioned_docs/version-0.8.2/ref-advanced.md",version:"0.8.2",sidebar_label:"Advanced Topics"},s=[{value:"Implementing Custom Network Status checks",id:"implementing-custom-network-status-checks",children:[]},{value:"Logging debug messages",id:"logging-debug-messages",children:[]},{value:"Optimistic UI",id:"optimistic-ui",children:[]},{value:"Listening to the offline queue events",id:"listening-to-the-offline-queue-events",children:[]}],p={rightToc:s};function l(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(a.b)("wrapper",Object(r.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h2",{id:"implementing-custom-network-status-checks"},"Implementing Custom Network Status checks"),Object(a.b)("p",null,"To use your own custom network checks, implement the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"NetworkStatus.ts"}),"NetworkStatus"),"\ninterface which provides two functions;"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"  onStatusChangeListener(callback: NetworkStatusChangeCallback): void;\n\n  isOffline(): boolean;\n")),Object(a.b)("h2",{id:"logging-debug-messages"},"Logging debug messages"),Object(a.b)("p",null,"Sync package is using debug package to print out debug messages"),Object(a.b)("p",null,"To enable debug please execute in console\n",Object(a.b)("inlineCode",{parentName:"p"},"localStorage.debug = 'AeroGearSync:*'")),Object(a.b)("p",null,"Some certain features can be enabled separately"),Object(a.b)("p",null,Object(a.b)("inlineCode",{parentName:"p"},"localStorage.debug = 'AeroGearSync:OfflineMutations*'")),Object(a.b)("h2",{id:"optimistic-ui"},"Optimistic UI"),Object(a.b)("p",null,"By default user changes that are made when offline will not appear in the app\nuntil they going to be synced to server. In some circumstances users may want to see them instantly to perform various operations on the data\nWhen performing mutations users can decide to supply ",Object(a.b)("inlineCode",{parentName:"p"},"optimisticResponse")," object that will\nappear instantly in the application UI. SDK provides helper method to work with optimistic responses."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),' import { createOptimisticResponse } from "@aerogear/datasync-js";\n\n createOptimisticResponse("updateTest", "Test", { data: "test" });\n')),Object(a.b)("p",null,"Users can detect if the provided data is optimistic response by checking ",Object(a.b)("inlineCode",{parentName:"p"},"optimisticResponse")," flag is set to true."),Object(a.b)("h2",{id:"listening-to-the-offline-queue-events"},"Listening to the offline queue events"),Object(a.b)("p",null,"Developers can implement ",Object(a.b)("inlineCode",{parentName:"p"},"offlineQueueListener")," that can be passed as config element.\nThis listener is going to be notified about new items that were added to offline queue.\nListener can be used to build UI support and show pending changes.\nThis feature can be mixed together with ",Object(a.b)("inlineCode",{parentName:"p"},"OptimisticResponse")," to deliver great offline experience\nSee example application for more information."))}l.isMDXComponent=!0},288:function(e,t,n){"use strict";n.d(t,"a",(function(){return u})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),l=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c({},t,{},e)),n},u=function(e){var t=l(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},b=Object(r.forwardRef)((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=l(n),b=r,m=u["".concat(o,".").concat(b)]||u[b]||d[b]||a;return n?i.a.createElement(m,c({ref:t},p,{components:n})):i.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=b;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var p=2;p<a;p++)o[p]=n[p];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}b.displayName="MDXCreateElement"}}]);