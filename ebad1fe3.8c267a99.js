(window.webpackJsonp=window.webpackJsonp||[]).push([[73],{126:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return s}));var a=n(2),r=n(6),i=(n(0),n(134)),o={id:"cli",title:"Datastore CLI",sidebar_label:"Datastore CLI"},c={unversionedId:"datastore/cli",id:"datastore/cli",isDocsHomePage:!1,title:"Datastore CLI",description:"We provide a graphback plugin to generate required config for the DataStore.",source:"@site/../docs/datastore/cli.md",permalink:"/docs/next/datastore/cli",editUrl:"https://github.com/aerogear/offix/edit/master/website/../docs/datastore/cli.md",version:"next",sidebar_label:"Datastore CLI",sidebar:"docs",previous:{title:"React - using Datastore Hooks",permalink:"/docs/next/datastore/react"}},l=[{value:"What is Graphback",id:"what-is-graphback",children:[]},{value:"Using the CLI tool",id:"using-the-cli-tool",children:[{value:"Installing the plugin",id:"installing-the-plugin",children:[]},{value:"Running the graphback generator",id:"running-the-graphback-generator",children:[]}]}],p={rightToc:l};function s(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(i.b)("p",null,"We provide a graphback plugin to generate required config for the DataStore."),Object(i.b)("h2",{id:"what-is-graphback"},"What is Graphback"),Object(i.b)("p",null,"Graphback simplifies application development by generating a production-ready API\nfrom data models to access data from one or more data sources.\nGraphback uses GraphQL and GraphQLCRUD to make it easy get the data you need,\nand follows the convention over configuration paradigm to to reduce the amount of\nsetup and boilerplate costs associated with creating GraphQL applications."),Object(i.b)("p",null,"Read about graphback-cli ",Object(i.b)("a",Object(a.a)({parentName:"p"},{href:"https://graphback.dev/docs/cli/graphback-cli"}),"here"),"."),Object(i.b)("h2",{id:"using-the-cli-tool"},"Using the CLI tool"),Object(i.b)("p",null,"The plugin generates a ",Object(i.b)("inlineCode",{parentName:"p"},"schema.json")," for models annotated with ",Object(i.b)("inlineCode",{parentName:"p"},"@datasync-client")," in your graphql schema.\nIt also generates a ",Object(i.b)("inlineCode",{parentName:"p"},"config.ts")," file that instantiates all the models with default settings is generated.\nYou can import models from ",Object(i.b)("inlineCode",{parentName:"p"},"config.ts")," and start coding!"),Object(i.b)("h3",{id:"installing-the-plugin"},"Installing the plugin"),Object(i.b)("p",null,"For npm\n",Object(i.b)("inlineCode",{parentName:"p"},"npm install --save-dev graphback-cli offix-datasync-client-plugin"),"\nor yarn\n",Object(i.b)("inlineCode",{parentName:"p"},"yarn add --dev graphback-cli offix-datasync-client-plugin")),Object(i.b)("p",null,"Create your ",Object(i.b)("inlineCode",{parentName:"p"},".graphqlrc.yml")),Object(i.b)("pre",null,Object(i.b)("code",Object(a.a)({parentName:"pre"},{}),"schema: './src/schema.graphql'\nextensions:\n  graphback:\n    # path to data model file(s)\n    model: './src/model/runtime.graphql'\n    plugins:\n      offix-datasync-client-plugin:\n        modelOutputDir: './src/datasync'\n")),Object(i.b)("h4",{id:"plugin-options"},"Plugin Options"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"modelOutputDir")," - The path to the folder where the generated config files will be saved.\nThis folder will be created if it doesn't exist."),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"config.ts")," will be generated in ",Object(i.b)("inlineCode",{parentName:"p"},"<modelsOutputDir>/config.ts"),".\nImport models from this from this file in your code and start coding."),Object(i.b)("h3",{id:"running-the-graphback-generator"},"Running the graphback generator"),Object(i.b)("p",null,"For npm,\n",Object(i.b)("inlineCode",{parentName:"p"},"npm graphback generate")),Object(i.b)("p",null,"for yarn,\n",Object(i.b)("inlineCode",{parentName:"p"},"yarn graphback generate")))}s.isMDXComponent=!0},134:function(e,t,n){"use strict";n.d(t,"a",(function(){return d})),n.d(t,"b",(function(){return g}));var a=n(0),r=n.n(a);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=r.a.createContext({}),s=function(e){var t=r.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},d=function(e){var t=s(e.components);return r.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},u=r.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),u=a,g=d["".concat(o,".").concat(u)]||d[u]||b[u]||i;return n?r.a.createElement(g,c(c({ref:t},p),{},{components:n})):r.a.createElement(g,c({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var p=2;p<i;p++)o[p]=n[p];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);