(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{100:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return o})),a.d(t,"metadata",(function(){return d})),a.d(t,"rightToc",(function(){return c})),a.d(t,"default",(function(){return p}));var n=a(2),r=a(6),i=(a(0),a(134)),o={id:"edits",title:"Edits",sidebar_label:"Edits"},d={unversionedId:"datastore/edits",id:"datastore/edits",isDocsHomePage:!1,title:"Edits",description:"Saving Data",source:"@site/../docs/datastore/edits.md",permalink:"/docs/next/datastore/edits",editUrl:"https://github.com/aerogear/offix/edit/master/website/../docs/datastore/edits.md",version:"next",sidebar_label:"Edits",sidebar:"docs",previous:{title:"Queries",permalink:"/docs/next/datastore/queries"},next:{title:"Subscribing to Changes",permalink:"/docs/next/datastore/subscriptions"}},c=[{value:"Saving Data",id:"saving-data",children:[]},{value:"Updating Data",id:"updating-data",children:[{value:"Save Or Update",id:"save-or-update",children:[]}]},{value:"Deleting Data",id:"deleting-data",children:[]}],s={rightToc:c};function p(e){var t=e.components,a=Object(r.a)(e,["components"]);return Object(i.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(i.b)("h2",{id:"saving-data"},"Saving Data"),Object(i.b)("p",null,"The DataStore Models provides two methods to save data;"),Object(i.b)("ul",null,Object(i.b)("li",{parentName:"ul"},Object(i.b)("inlineCode",{parentName:"li"},"save()")),Object(i.b)("li",{parentName:"ul"},Object(i.b)("a",Object(n.a)({parentName:"li"},{href:"#save-or-update"}),"saveOrUpdate()"))),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"save()")," generates a primary key (in this case, an ",Object(i.b)("inlineCode",{parentName:"p"},"id"),"), if one is not provided."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"import { TaskModel } from './datastoreConfig';\n\nTaskModel.save({\n    title: \"Write Docs\",\n    description: \"Write Offix Docs\",\n}).then((data) => {\n    console.log(data); // { id: '...', title, description }\n})\n")),Object(i.b)("h2",{id:"updating-data"},"Updating Data"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'import { TaskModel } from \'./datastoreConfig\';\n\n// update the title of task to "Offix Test"\nTaskModel.updateById({\n    id: documentId\n    title: "Offix Test"\n})\n.then((data) => {\n    console.log(data); // updated data\n})\n')),Object(i.b)("h3",{id:"save-or-update"},"Save Or Update"),Object(i.b)("p",null,"The DataStore provides a ",Object(i.b)("inlineCode",{parentName:"p"},"saveOrUpdate")," method to use for upserts.\nIf the primary key(in this case an ",Object(i.b)("inlineCode",{parentName:"p"},"id"),") is provided, the DataStore will\ntry to update the existing document if it exists, if it does not exist\nor no primary key was provided, the DataStore saves the data as a new document."),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),'TaskModel.saveOrUpdate({\n    id: documentId\n    title: "Offix Test"\n})\n.then((data) => {\n    console.log(data); // updated data\n})\n')),Object(i.b)("h2",{id:"deleting-data"},"Deleting Data"),Object(i.b)("pre",null,Object(i.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"await TaskModel.removeById(documentId);\n")))}p.isMDXComponent=!0},134:function(e,t,a){"use strict";a.d(t,"a",(function(){return l})),a.d(t,"b",(function(){return f}));var n=a(0),r=a.n(n);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function d(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function c(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=r.a.createContext({}),p=function(e){var t=r.a.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):d(d({},t),e)),a},l=function(e){var t=p(e.components);return r.a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},b=r.a.forwardRef((function(e,t){var a=e.components,n=e.mdxType,i=e.originalType,o=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),l=p(a),b=n,f=l["".concat(o,".").concat(b)]||l[b]||u[b]||i;return a?r.a.createElement(f,d(d({ref:t},s),{},{components:a})):r.a.createElement(f,d({ref:t},s))}));function f(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=a.length,o=new Array(i);o[0]=b;var d={};for(var c in t)hasOwnProperty.call(t,c)&&(d[c]=t[c]);d.originalType=e,d.mdxType="string"==typeof e?e:n,o[1]=d;for(var s=2;s<i;s++)o[s]=a[s];return r.a.createElement.apply(null,o)}return r.a.createElement.apply(null,a)}b.displayName="MDXCreateElement"}}]);